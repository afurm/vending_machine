require 'thor'
require 'json'
require_relative 'product/basic'
require_relative 'product/fanta'
require_relative 'product/factory'
require_relative 'product/sprite'
require_relative 'product/orange_juice'
require_relative 'product/water'
require_relative 'product/coca_cola'
require_relative 'cli/file_operation'
require_relative 'cli/messages'
require_relative 'cli/manager'
require 'pry'

class Start < Thor
  include FileOperation
  include Messages
  include Manager
  
  desc "init", "Initialize products."
  def init
    product_obj = []
    Product::Factory.add(Product::Fanta.new, 3)
    Product::Factory.add(Product::CocaCola.new, 2)
    Product::Factory.add(Product::OrangeJuice.new, 1)
    Product::Factory.add(Product::Sprite.new, 2)
    Product::Factory.add(Product::Water.new, 0)

    print_list_of_products do |product|
      product_obj << { name: product::NAME, count: product.count, price: product::PRICE }
    end

    write(product_obj)
  end

  desc "buy", "Chose product you want to buy"
  def buy(name, amount)
    product_to_buy, updated_products = find_product(name, amount) 
    return cannot_find if product_to_buy.empty?
    write(updated_products)
    success(product_to_buy)
  end
end

Start.start(ARGV)